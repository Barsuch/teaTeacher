error: jqxhr ({"readyState":4,"responseText":"<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL was not found on this server.</p>\n<hr>\n<address>Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12 Server at 127.0.0.1 Port 80</address>\n</body></html>\n","status":404,"statusText":"Not Found"}), testStatus (error), errorThrown (Not Found)
error: jqxhr ({"readyState":4,"responseText":"imagedata","status":200,"statusText":"OK"}), testStatus (parsererror), errorThrown (No conversion from text to image)

#note
The readyState property of an XMLHttpRequest (XHR) object in jQuery AJAX requests represents
the state of the request. It can have the following values:

0: UNSENT - The request has been created but not sent.
1: OPENED - The request headers have been set, but the request has not been sent yet.
2: HEADERS_RECEIVED - The request headers have been received from the server.
3: LOADING - The request is in progress, and the server is sending data back.
4: DONE - The request is complete, either successful or failed.

The `XMLHttpRequest` object is a key component in web development, especially for making asynchronous requests to a server. Here are some of its main properties:

1. **readyState**: Indicates the state of the request. It can have the following values:
   - `0`: UNSENT - The request is not initialized.
   - `1`: OPENED - The request has been set up.
   - `2`: HEADERS_RECEIVED - The request has been sent, and the headers and status are available.
   - `3`: LOADING - The response is being received.
   - `4`: DONE - The request is complete, and the response is fully received.

2. **responseText**: Returns the response data as a string.

3. **responseXML**: Returns the response data as a Document object, which can be parsed as XML.

4. **status**: Returns the HTTP status code of the request (e.g., 200 for "OK" and 404 for "Not Found").

5. **statusText**: Returns the status text of the HTTP response (e.g., "OK" or "Not Found").

6. **responseType**: Specifies the type of response expected (e.g., "text", "document", "json", "blob", etc.).

7. **responseURL**: Returns the serialized URL of the response.

8. **timeout**: Sets the time in milliseconds a request can take before automatically being terminated.

9. **withCredentials**: Indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies or authorization headers.

10. **upload**: Provides access to the upload process, allowing you to monitor the progress of uploads.

11. **onreadystatechange**: An event handler that is called whenever the `readyState` property changes.

12. **onload**: An event handler that is called when the request completes successfully.

These properties allow you to control and monitor the state and data of your HTTP requests effectively¹².

Is there a specific property or functionality you're interested in exploring further?

Source: Conversation with Copilot, 9/12/2024
(1) XMLHttpRequest - Web APIs | MDN - MDN Web Docs. https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest.
(2) What are the properties of XMLHttpRequest - GeeksforGeeks. https://www.geeksforgeeks.org/what-are-the-properties-of-xmlhttprequest/.
(3) What is XMLHTTPRequest Object - GeeksforGeeks. https://www.geeksforgeeks.org/what-is-xmlhttprequest-object/.
(4) Understanding XMLHttpRequest - Javatpoint. https://www.javatpoint.com/understanding-xmlhttprequest.